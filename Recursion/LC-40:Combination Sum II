class Solution {
public:
void combination(int index, int target, vector<int>& candidates, vector<int>& track, vector<vector<int>>& res){
        if(target == 0){
            res.push_back(track);
            return;
        }
        
    for(int i = index; i< candidates.size(); i++){
        if(candidates[i] > target){break;}
        if(i > index && candidates[i] == candidates[i-1]){continue;}
        if(candidates[i] <= target){
            track.push_back(candidates[i]);
            combination(i+1,target-candidates[i],candidates,track,res);
            track.pop_back();
        }
    }
    return;
}
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(),candidates.end());
        vector<vector<int>> res;
        vector<int> track;
        combination(0,target,candidates,track,res);
        return res;
    }
};
