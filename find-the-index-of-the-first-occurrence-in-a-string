class Solution {
public:
    int strStr(string haystack, string needle) {
        if (haystack.length() < needle.length()) {
            return -1;
        }
        int ans = -1;
        bool match = true;
        for(int i = 0; i< haystack.length(); i++){
            int j;
            int k = i;
            for(j = 0; j< needle.length(); j++){
                if(haystack[k] == needle[j]){
                    match = true;
                    k++;
                }
                else{
                    match = false;
                    break;
                }
            }
            if(match && j == needle.length()){
                ans = k - j;
                break;
            }
        }
        /* STL Approach
        for (int i = 0; i <= haystack.length() - needle.length(); i++) {
            if (haystack.substr(i, needle.length()) == needle) {
                return i;
            }
        }
        */
        return ans;
    }
};
